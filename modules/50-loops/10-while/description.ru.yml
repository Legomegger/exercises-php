---

name: Цикл While
theory: |

  Повторяющиеся действия в программировании делаются с помощью циклов (или рекурсии, но эта тема раскрывается на курсах хекслета). Первый вариант цикла, который мы изучим называется `while`. Самый простой вариант повторений, который можно придумать - вывод на экран чисел от 1 до x. Пользы от такой программы мало, но она позволяет сосредоточиться исключительно на структуре цикла:

  ```php
  <?php

  function printNumbers($lastNumber)
  {
      $i = 1;
      // Обратите внимание на пробел после слова while
      while ($i <= $lastNumber) {
          print_r("{$i}\n");
          $i = $i + 1;
      }
      print_r('finished!');
  }

  printNumbers(3);
  // => 1
  // => 2
  // => 3
  // => finished!
  ```

  Конструкция выше читается так "пока выполняется условие (предикат) делать то что указано в теле цикла". Она состоит из трех элементов:

  * Ключевое слово `while`
  * Предикат в скобках после `while`
  * Блок кода в фигурных скобках. Обычно его называют тело цикла.

  Каждое выполнение тела называется итерацией. В примере выше, вызов `printNumbers(3)` породил три итерации, на каждой из которых была распечатана переменная `$i`.

  Самое главное в цикле - выход из цикла. Процесс, который порождает цикл, должен в конце концов остановиться, причем ответственность за остановку полностью лежит на программисте. Как правило, задача сводится к введению переменной, называемой "счетчик". Сначала он инициализируется. В нашем примере это строчка `$i = 1`. Затем, в условии цикла проверяется, не достиг ли счетчик своего предельного значения. Выше, верхняя граница определяется аргументом с которым вызвана функция. Если условие цикла не выполнено, то тело не выполняется и интерпретатор двигается дальше, выполняя инструкции указанные после цикла. Но если условие цикла истинно, то выполняется тело, в котором находится ключевой элемент остановки - изменение счетчика. Обычно его делают в конце тела и это изменение, одно из редких мест, где невозможно обойтись без переменной. В нашем примере за изменение отвечает строчка `$i = $i + 1`.

instructions: |

  Модифицируйте функцию `printNumbers`, так, чтобы она печатала числа в обратном порядке. Для этого нужно идти от верхней границы к нижней. То есть счетчик должен быть инициализирован максимальным значением, а в теле цикла его нужно уменьшать до нижней границы.

  Пример вызова и вывода:

  ```php
  <?php

  printNumbers(4);
  // => 4
  // => 3
  // => 2
  // => 1
  // => finished!
  ```
  ```

tips: []
